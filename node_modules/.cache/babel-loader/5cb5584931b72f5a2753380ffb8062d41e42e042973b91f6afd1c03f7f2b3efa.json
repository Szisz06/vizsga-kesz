{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\install\\\\Downloads\\\\vizsga-frontend\\\\src\\\\view\\\\Tablazat.js\",\n  _s = $RefreshSig$();\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { byPrefixAndName } from \"@awesome.me/kit-KIT_CODE/icons\";\nimport { Table } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tablazat(tabla) {\n  _s();\n  const pipa = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n    icon: byPrefixAndName.fas[\"check\"]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 16\n  }, this);\n  const X = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n    icon: byPrefixAndName.fas[\"xmark\"]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 13\n  }, this);\n  const [valasz, setValasz] = useState([]);\n  const handleChange = e => {\n    setValasz(e.target.valasz);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Szavak\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Angol\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Magyar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Visszajelz\\xE9s\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tabla.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.angol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              value: valasz,\n              type: \"text\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", item.magyar === valasz ? pipa : X]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(Tablazat, \"z2x+zJ6h61+Wv0QWsc7lACt0FIk=\");\n_c = Tablazat;\nvar _c;\n$RefreshReg$(_c, \"Tablazat\");","map":{"version":3,"names":["FontAwesomeIcon","byPrefixAndName","Table","useState","jsxDEV","_jsxDEV","Tablazat","tabla","_s","pipa","icon","fas","fileName","_jsxFileName","lineNumber","columnNumber","X","valasz","setValasz","handleChange","e","target","children","map","item","index","angol","value","type","onChange","magyar","_c","$RefreshReg$"],"sources":["C:/Users/install/Downloads/vizsga-frontend/src/view/Tablazat.js"],"sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { byPrefixAndName } from \"@awesome.me/kit-KIT_CODE/icons\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function Tablazat(tabla) {\r\n  const pipa = <FontAwesomeIcon icon={byPrefixAndName.fas[\"check\"]} />;\r\n  const X = <FontAwesomeIcon icon={byPrefixAndName.fas[\"xmark\"]} />;\r\n  const [valasz, setValasz] = useState([]);\r\n\r\n  const handleChange = (e) => {\r\n    setValasz(e.target.valasz);\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <h1>Szavak</h1>\r\n      <Table>\r\n        <thead>\r\n          <tr>\r\n            <th>Angol</th>\r\n            <th>Magyar</th>\r\n            <th>Visszajelz√©s</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {tabla.map((item, index) => (\r\n            <tr key={index}>\r\n              <td>{index + 1}</td>\r\n              <td>{item.angol}</td>\r\n              <td>\r\n                <input value={valasz} type=\"text\" onChange={handleChange} />\r\n              </td>\r\n              <td> {item.magyar === valasz ? pipa : X}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}