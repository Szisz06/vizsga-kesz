{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\install\\\\Downloads\\\\vizsga-frontend\\\\src\\\\view\\\\Tablazat.js\",\n  _s = $RefreshSig$();\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { byPrefixAndName } from \"@awesome.me/kit-KIT_CODE/icons\";\nimport { Table } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tablazat(tabla) {\n  _s();\n  const pipa = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n    icon: byPrefixAndName.fas[\"check\"]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 16\n  }, this);\n  const X = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n    icon: byPrefixAndName.fas[\"xmark\"]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 13\n  }, this);\n  const [value, setValue] = useState([\"Emberi test\"]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Szavak\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Angol\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Magyar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Visszajelz\\xE9s\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tabla.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.angol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              value: valasz,\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", item.magyar === valasz ? pipa : X]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_s(Tablazat, \"rx2wDbRPWn0t5uiaBOGwOHtP0kQ=\");\n_c = Tablazat;\nvar _c;\n$RefreshReg$(_c, \"Tablazat\");","map":{"version":3,"names":["FontAwesomeIcon","byPrefixAndName","Table","jsxDEV","_jsxDEV","Tablazat","tabla","_s","pipa","icon","fas","fileName","_jsxFileName","lineNumber","columnNumber","X","value","setValue","useState","children","map","item","index","angol","valasz","type","magyar","_c","$RefreshReg$"],"sources":["C:/Users/install/Downloads/vizsga-frontend/src/view/Tablazat.js"],"sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { byPrefixAndName } from \"@awesome.me/kit-KIT_CODE/icons\";\r\nimport { Table } from \"react-bootstrap\";\r\n\r\nexport default function Tablazat(tabla) {\r\n  const pipa = <FontAwesomeIcon icon={byPrefixAndName.fas[\"check\"]} />;\r\n  const X = <FontAwesomeIcon icon={byPrefixAndName.fas[\"xmark\"]} />;\r\n  const [value, setValue] = useState([\"Emberi test\"]);\r\n  \r\n  return (\r\n    <div>\r\n      <h1>Szavak</h1>\r\n      <Table>\r\n        <thead>\r\n          <tr>\r\n            <th>Angol</th>\r\n            <th>Magyar</th>\r\n            <th>Visszajelz√©s</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {tabla.map((item, index) => (\r\n            <tr key={index}>\r\n              <td>{index + 1}</td>\r\n              <td>{item.angol}</td>\r\n              <td>\r\n                <input value={valasz} type=\"text\" />\r\n              </td>\r\n              <td> {item.magyar === valasz ? pipa : X}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}